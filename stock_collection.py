

stock_classes = {
    "AI概念": ["002230","002236","603019","000977","601138","603986","002463","600570","002354",], 
    "鸿蒙概念": ["600460", "600584", "603160", "603501","002261", "002371", "002405", "301221"], 
    '机器人': ["600607", "600274", "600124","002747", "002486"],
    "新能车":["600166", "600733", "600741", "601633", "600884","000069", "000625", "000957", "002074", "002176", "002249", "002594"],
    "数字经济":["600034", "600100", "600343", "600446", "600482", "600537", "600745","600877", "600990", \
            "601012", "601318", "601989", "000034", "000413", "000561", "000636", "000683", "000733", "000848", "002023", \
            "002065", "002123", "002154", "002241", "002315", "002338", "002414", "002415", "002439", "002449",\
                  "002465", "002475", "002530", "301159"]
    

}



if __name__ == '__main__':
    # 使用集合来跟踪所有唯一的元素和发现的重复元素
    all_elements = set()
    duplicate_elements = set()
    
    # 遍历字典的每个值（列表）
    for value_list in stock_classes.values():
        # 遍历列表中的每个元素
        for element in value_list:
            if element in all_elements:
                # 如果元素已经在all_elements集合中，则它是重复的
                duplicate_elements.add(element)
            else:
                # 否则，将其添加到all_elements集合中
                all_elements.add(element)
    
    # 输出重复的元素
    print("重复的元素:", duplicate_elements)